{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class CounterComponent {\n  constructor() {\n    this.startCount = 0;\n    this.countChange = new EventEmitter();\n    this.count = 0;\n  }\n  ngOnChanges() {\n    this.count = this.startCount;\n  }\n  increment() {\n    this.count++;\n    this.notify();\n  }\n  decrement() {\n    this.count--;\n    this.notify();\n  }\n  reset(newCount) {\n    const count = parseInt(newCount, 10);\n    if (!Number.isNaN(count)) {\n      this.count = count;\n      this.notify();\n    }\n  }\n  notify() {\n    this.countChange.emit(this.count);\n  }\n}\nCounterComponent.ɵfac = function CounterComponent_Factory(t) {\n  return new (t || CounterComponent)();\n};\nCounterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CounterComponent,\n  selectors: [[\"app-counter\"]],\n  inputs: {\n    startCount: \"startCount\"\n  },\n  outputs: {\n    countChange: \"countChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 15,\n  vars: 1,\n  consts: [[\"data-testid\", \"count\"], [\"data-testid\", \"increment-button\", 3, \"click\"], [\"data-testid\", \"decrement-button\", 3, \"click\"], [\"type\", \"number\", \"data-testid\", \"reset-input\"], [\"resetInput\", \"\"], [\"data-testid\", \"reset-button\", 3, \"click\"]],\n  template: function CounterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Independent counter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\")(3, \"strong\", 0);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"p\")(6, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_6_listener() {\n        return ctx.increment();\n      });\n      i0.ɵɵtext(7, \"+\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_8_listener() {\n        return ctx.decrement();\n      });\n      i0.ɵɵtext(9, \"-\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"p\");\n      i0.ɵɵelement(11, \"input\", 3, 4);\n      i0.ɵɵelementStart(13, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_13_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(12);\n        return i0.ɵɵresetView(ctx.reset(_r0.value));\n      });\n      i0.ɵɵtext(14, \"Reset\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.count);\n    }\n  },\n  styles: [\"[_nghost-%COMP%] {\\n  display: block;\\n  margin-bottom: 1rem;\\n  border: 4px solid navy;\\n  border-radius: 2px;\\n  padding: 0 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jb3VudGVyL2NvdW50ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxtQkFBbUI7RUFDbkIsc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgYm9yZGVyOiA0cHggc29saWQgbmF2eTtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICBwYWRkaW5nOiAwIDFyZW07XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAkC,eAAe;;AAOjF,OAAM,MAAOC,gBAAgB;EAL7BC;IAOS,eAAU,GAAG,CAAC;IAGd,gBAAW,GAAG,IAAIF,YAAY,EAAU;IAExC,UAAK,GAAG,CAAC;;EAETG,WAAW;IAChB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,UAAU;EAC9B;EAEOC,SAAS;IACd,IAAI,CAACF,KAAK,EAAE;IACZ,IAAI,CAACG,MAAM,EAAE;EACf;EAEOC,SAAS;IACd,IAAI,CAACJ,KAAK,EAAE;IACZ,IAAI,CAACG,MAAM,EAAE;EACf;EAEOE,KAAK,CAACC,QAAgB;IAC3B,MAAMN,KAAK,GAAGO,QAAQ,CAACD,QAAQ,EAAE,EAAE,CAAC;IACpC,IAAI,CAACE,MAAM,CAACC,KAAK,CAACT,KAAK,CAAC,EAAE;MACxB,IAAI,CAACA,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACG,MAAM,EAAE;;EAEjB;EAEQA,MAAM;IACZ,IAAI,CAACO,WAAW,CAACC,IAAI,CAAC,IAAI,CAACX,KAAK,CAAC;EACnC;;AAjCWH,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAe;EAAAC;IAAAZ;EAAA;EAAAa;IAAAJ;EAAA;EAAAK;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCP7BC,0BAAI;MAAAA,mCAAmB;MAAAA,iBAAK;MAE5BA,yBAAG;MAC2BA,YAAW;MAAAA,iBAAS;MAGlDA,yBAAG;MACOA;QAAA,OAASC,eAAW;MAAA,EAAC;MAAgCD,iBAAC;MAAAA,iBAAS;MACvEA,iCAA6D;MAArDA;QAAA,OAASC,eAAW;MAAA,EAAC;MAAgCD,iBAAC;MAAAA,iBAAS;MAGzEA,0BAAG;MACDA,+BAA6D;MAC7DA,kCAAqE;MAA7DA;QAAAA;QAAA;QAAA,OAASA,mCAAuB;MAAA,EAAC;MAA4BA,sBAAK;MAAAA,iBAAS;;;MAVvDA,eAAW;MAAXA,+BAAW","names":["EventEmitter","CounterComponent","constructor","ngOnChanges","count","startCount","increment","notify","decrement","reset","newCount","parseInt","Number","isNaN","countChange","emit","selectors","inputs","outputs","features","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/bruno/Documents/GitHub/utilizando_cypress/src/app/components/counter/counter.component.ts","/home/bruno/Documents/GitHub/utilizando_cypress/src/app/components/counter/counter.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.css'],\n})\nexport class CounterComponent implements OnChanges {\n  @Input()\n  public startCount = 0;\n\n  @Output()\n  public countChange = new EventEmitter<number>();\n\n  public count = 0;\n\n  public ngOnChanges(): void {\n    this.count = this.startCount;\n  }\n\n  public increment(): void {\n    this.count++;\n    this.notify();\n  }\n\n  public decrement(): void {\n    this.count--;\n    this.notify();\n  }\n\n  public reset(newCount: string): void {\n    const count = parseInt(newCount, 10);\n    if (!Number.isNaN(count)) {\n      this.count = count;\n      this.notify();\n    }\n  }\n\n  private notify(): void {\n    this.countChange.emit(this.count);\n  }\n}\n","<h1>Independent counter</h1>\n\n<p>\n  <strong data-testid=\"count\">{{ count }}</strong>\n</p>\n\n<p>\n  <button (click)=\"increment()\" data-testid=\"increment-button\">+</button>\n  <button (click)=\"decrement()\" data-testid=\"decrement-button\">-</button>\n</p>\n\n<p>\n  <input type=\"number\" #resetInput data-testid=\"reset-input\" />\n  <button (click)=\"reset(resetInput.value)\" data-testid=\"reset-button\">Reset</button>\n</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}