{"ast":null,"code":"import { createAction, props } from '@ngrx/store';\nexport const increment = createAction('[counter] Increment');\nexport const decrement = createAction('[counter] Decrement');\nexport const reset = createAction('[counter] Reset', props());\nexport const saveSuccess = createAction('[counter] Save success');\nexport const saveError = createAction('[counter] Save error', props());","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,EAAEC,KAAK,QAAQ,aAAa;AAIjD,OAAO,MAAMC,SAAS,GAAGF,YAAY,CAAC,qBAAqB,CAAC;AAC5D,OAAO,MAAMG,SAAS,GAAGH,YAAY,CAAC,qBAAqB,CAAC;AAC5D,OAAO,MAAMI,KAAK,GAAGJ,YAAY,CAAC,iBAAiB,EAAEC,KAAK,EAA2B,CAAC;AAEtF,OAAO,MAAMI,WAAW,GAAGL,YAAY,CAAC,wBAAwB,CAAC;AACjE,OAAO,MAAMM,SAAS,GAAGN,YAAY,CAAC,sBAAsB,EAAEC,KAAK,EAAoB,CAAC","names":["createAction","props","increment","decrement","reset","saveSuccess","saveError"],"sourceRoot":"","sources":["/home/bruno/Documents/GitHub/utilizando_cypress/src/app/actions/counter.actions.ts"],"sourcesContent":["import { createAction, props } from '@ngrx/store';\n\nimport { CounterState } from '../reducers/counter.reducer';\n\nexport const increment = createAction('[counter] Increment');\nexport const decrement = createAction('[counter] Decrement');\nexport const reset = createAction('[counter] Reset', props<{ count: CounterState }>());\n\nexport const saveSuccess = createAction('[counter] Save success');\nexport const saveError = createAction('[counter] Save error', props<{ error: Error }>());\n\nexport type CounterActions = ReturnType<\n  | typeof increment\n  | typeof decrement\n  | typeof reset\n  | typeof saveSuccess\n  | typeof saveError\n>;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}